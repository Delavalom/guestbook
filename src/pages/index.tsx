/* eslint-disable react-hooks/exhaustive-deps */
import { type NextPage } from "next";
import Head from "next/head";
import { useSession, signIn } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { type ChangeEvent, useState, useEffect } from "react";
import type { Comment } from "@prisma/client";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const [input, setInput] = useState("");
  const [comments, setComments] = useState<Comment[] | null>(null);
  const query = trpc.comment.getAll.useQuery()
  const mutation = trpc.comment.create.useMutation()

  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { value } = e.target;
    setInput(value);
  };

  const fetchComments = async () => {
    const data = await query.data
    if (!data) return
    setComments(data)
  }

  const create = () => {
    mutation.mutate({
      user: sessionData?.user?.name,
      content: input
    })
    fetchComments()
  };

  useEffect(()=> {
    fetchComments()
  }, [])

  return (
    <>
      <Head>
        <title>Guestbook</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-slate-800 to-black">
        <h1 className="py-10 text-7xl text-white">Guestbook</h1>
        <h2 className="w-6/12 pb-10 text-xl text-slate-400">
          Leave a comment below. It could be anything appreciation,
          information, wisdom, or even humor. Surprise me!
        </h2>

        {/* SignIn */}
        <section className="flex h-80 w-full max-w-xl flex-col justify-between rounded-xl bg-slate-700 p-10">
          <h1 className="text-3xl font-bold">Sign the Guestbook</h1>
          <h2>Share a message for a future visitor of my site.</h2>
          {sessionData ? (
            <div className="flex w-full flex-col gap-2 lg:flex-row">
              <input
                value={input}
                onChange={handleChange}
                className="flex-1 rounded-lg bg-slate-900 px-4 py-2 text-slate-50 outline-none"
                placeholder="Write me some cool things I'll stored forever..."
              />
              {/* Submit comment */}
              <button
                onClick={() => create()}
                className="w-fit rounded-full bg-slate-900 px-6 py-3"
              >
                Submit
              </button>
            </div>
          ) : (
            <button
              onClick={() => signIn()}
              className="w-fit rounded-full bg-slate-900 px-6 py-3"
            >
              Sign In
            </button>
          )}
          <h2 className="text-sm text-slate-400">
            Your information is only used to display your name and reply by
            email.
          </h2>
        </section>

        {/* Comments */}
        {comments && comments.reverse().map(comment => (
          <div key={comment.id} className='bg-slate-900 rounded-xl px-6 py-2 w-full max-w-xl flex flex-col gap-5 mt-5'>
            <h1 className="text-xl">{comment.content}</h1>
            <div className="w-full flex justify-between">
              <span className="text-slate-500">{comment.user}</span>
              <span className="text-slate-500">{`${comment.createdAt.toLocaleDateString('en-US')}`}</span>
            </div>
          </div>
        ))}
      </main>
    </>
  );
};

export default Home;
